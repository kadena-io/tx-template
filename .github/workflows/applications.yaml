name: Build and publish application binaries

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.8.4']
        cabal: ['3.4']
        os: ['ubuntu-18.04', 'ubuntu-20.04', 'macOS-latest' ]
        cabalcache: ['true']

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.kadena_cabal_cache_aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.kadena_cabal_cache_aws_secret_access_key }}
      AWS_DEFAULT_REGION: us-east-1

      # Aritfacts
      ARTIFACT_BUCKET: kadena-cabal-cache
      BINFILE: pact.${{ matrix.ghc }}.${{ matrix.os }}.${{ github.sha }}.tar.gz

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Haskell Setup
    - name: Install GHC and Cabal
      uses: haskell/actions/setup@v1.2
      with:
         ghc-version: ${{ matrix.ghc }}
         cabal-version: ${{ matrix.cabal }}
    - name: Confirm GHC and Cabal installation
      run: |
        ghc --version
        cabal --version
    # Project Setup
    - uses: actions/cache@v2
      name: Cache dist-newstyle
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ matrix.os }}-${{ matrix.ghc }}-4-cabal

    # Build
    - name: Update package database
      shell: bash
      run: cabal update
    - name: Display outdated packages
      run: cabal outdated
    - name: Configure build
      run: |
        cabal build --dry-run
        cabal freeze
#    - name: Sync from cabal cache
#      if: matrix.cabalcache == 'true'
#      uses: larskuhtz/cabal-cache-action@ecc751af6d31b3ed5a3b4aefdefd0ed6ef4cb414
#      with:
#        bucket: "kadena-cabal-cache"
#        region: "us-east-1"
#        folder: "${{ matrix.os }}"
#        aws_access_key_id: "${{ secrets.kadena_cabal_cache_aws_access_key_id }}"
#        aws_secret_access_key: "${{ secrets.kadena_cabal_cache_aws_secret_access_key }}"
    - name: Build dependencies
      shell: bash
      run: cabal build --only-dependencies
    - name: Build
      shell: bash
      run: cabal build
    # Publish Artifacts
    - name: Prepare artifacts
      if: "!contains(matrix.flags, '-build-tool')"
      shell: bash
      run: |
        export VER=$(grep '^version' pact.cabal | sed -e 's/.*: *//')
        mkdir -p dist-newstyle/artifacts/applications
        cp dist-newstyle/build/*/ghc-${{ matrix.ghc }}/pact-${VER}/x/pact/build/pact/pact dist-newstyle/artifacts/applications
    - name: Publish applications
      if: "!contains(matrix.flags, '-build-tool')"
      uses: actions/upload-artifact@v1
      with:
        name: pact-applications.${{ matrix.ghc }}.${{ matrix.os }}
        path: dist-newstyle/artifacts/applications
